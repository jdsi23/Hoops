#!/usr/bin/env bash
set -euo pipefail

# Variables
IMAGE_NAME="hoops"
TAG="${TAG:-latest}"
AWS_REGION="${AWS_REGION:-us-east-1}"
ECR_REPO="${ECR_REPO:-hoops}"

# Get AWS account ID
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
ECR_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${TAG}"

# Build the Docker image
docker build -t "${IMAGE_NAME}" .

# Ensure the ECR repository exists
aws ecr describe-repositories --repository-names "${ECR_REPO}" >/dev/null 2>&1 || \
    aws ecr create-repository --repository-name "${ECR_REPO}"

# Authenticate Docker to ECR
aws ecr get-login-password --region "${AWS_REGION}" | \
    docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

# Tag and push the image
docker tag "${IMAGE_NAME}:${TAG}" "${ECR_URL}"
docker push "${ECR_URL}"

# Deploy with Terraform
cd terraform
terraform init
terraform state show aws_ecr_repository.hoops >/dev/null 2>&1 || \
    terraform import aws_ecr_repository.hoops "${ECR_REPO}"
terraform apply -auto-approve -var="region=${AWS_REGION}" -var="container_image=${ECR_URL}"
